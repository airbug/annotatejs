//-------------------------------------------------------------------------------
// Requires
//-------------------------------------------------------------------------------

var Class = require('../../Class');
var Token = require('./Token');


//-------------------------------------------------------------------------------
// Declare Class
//-------------------------------------------------------------------------------

var TokenContainer = Class.extend(Token, {

    //-------------------------------------------------------------------------------
    // Constructor
    //-------------------------------------------------------------------------------

    _constructor: function(type, characterList, tokenList) {

        this._super(type, characterList);


        //-------------------------------------------------------------------------------
        // Declare Variables
        //-------------------------------------------------------------------------------

        /**
         * @private
         * @type {List}
         */
        this.tokenList = tokenList;
    },


    //-------------------------------------------------------------------------------
    // Getters and Setters
    //-------------------------------------------------------------------------------

    /**
     * @return {List}
     */
    getTokenList: function() {
        return this.tokenList;
    },


    //-------------------------------------------------------------------------------
    // Object Implementation
    //-------------------------------------------------------------------------------

    /**
     * @return {string}
     */
    toString: function() {
        var output = "[TokenContainer] {\n";
        output += "  type: " + this.type + "\n";
        output += "  children: [\n";
        var childOutput = "";
        this.tokenList.forEach(function(token) {
            childOutput += token.toString();
        });
        if (childOutput) {
            var childOutputParts = childOutput.split("\n");
            for (var i = 0, size = childOutputParts.length; i < size; i++) {
                var childOutputPart = childOutputParts[i];
                output += "    " + childOutputPart + "\n";
            }
        }
        output += "  \n";
        output += "}\n";
        return output;
    }


    //-------------------------------------------------------------------------------
    // Class Methods
    //-------------------------------------------------------------------------------
});


//-------------------------------------------------------------------------------
// Static Variables
//-------------------------------------------------------------------------------


//-------------------------------------------------------------------------------
// Module Export
//-------------------------------------------------------------------------------

module.exports = TokenContainer;
